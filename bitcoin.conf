##
## bitcoin.conf configuration file.
## Generated by contrib/devtools/gen-bitcoin-conf.sh.
##
## Lines beginning with # are comments.
## Only use bitcoin.conf for custom settings. To use, copy this file
## to your standard data directory (default: ~/.bitcoin/bitcoin.conf), uncomment
## options you would like to change, and save the file.
##


# ---[ IBD (Initial Block Download) settings ]--------------------------------------------------
# These settings must be commented after IBD completion!
# During the IBD a bigger cache speeds up the syncing, afterwards we can reduce the size of the 
# database cache, so to reduce memory consumption and allow Electrs to run in parallel. We also 
# now want to enable the node to listen to and relay transactions.

# Set the dimension of dbcache in megabyte from 4 to 16384, default: 300 
# based on RAM available on device
# suggestion: dbcache=1/2 x RAM available, e.g.: 4GB RAM -> dbcache=2048
dbcache=5000

# Disable most of the mempool functionality and reject transactions from network peers. 
# RPC transactions are not affected. (default: 0)
blocksonly=1


# ---[ Other usual settings ]------------------------------------------------------------------

# Bitcoin daemon. Accept command line and JSON-RPC commands.
server=1

# Run in the background as a daemon and accept commands (default: 0). If you run it as a daemon, 
# you can check the progress in the debug.log in the .bitcoind dir.
#daemon=1

# Maintain a full transaction index, used by the getrawtransaction RPC call (default: 0). 
# It's needed if you  want to look up old transactions. It’s a good idea to decide on this 
# before the initial sync, changing it later will require a lengthy full -reindex
txindex=1

# Rebuild chain state and block index from the blk*.dat files on disk
#reindex=1


# ---[ Paths settings ]----------------------------------------------------------------------

# Specify the ".bitcoin" data directory to hold blocks subdirectory for *.dat files (default:
# <datadir>). Consider to copy blocks, coinstates, indexes and bitcoin.conf if you want to 
# migrate the blockchain to a new driver  
#blocksdir=/media/ubuntu/B680AD7C80AD43A9/.bitcoin/

# Specify data directory. Consider an external hard drive to stock the blockchain. If you want 
# to migrate the blockchain to a new driver, just copy blocks, coinstates, indexes and bitcoin.conf   
datadir=/media/ubuntu/B680AD7C80AD43A9/.bitcoin/

# Specify path to read-only configuration file. Relative paths will be
# prefixed by datadir location. (default: bitcoin.conf)
#conf=/media/ubuntu/B680AD7C80AD43A9/.bitcoin/bitcoin.conf

# Imports blocks from external file on startup
#loadblock=<file>


# ---[ Chain settings ]--------------------------------------------------------------------

# If this block is in the chain assume that it and its ancestors are valid
# and potentially skip their script verification (default: 0 to verify all 
# and force your node to validate every transaction & block from the Genesis block
#assumevalid=0

# Reduce storage requirements by enabling pruning (deleting) of old
# blocks. This allows the pruneblockchain RPC to be called to
# delete specific blocks, and enables automatic pruning of old
# blocks if a target size in MiB is provided. This mode is
# incompatible with -txindex and -coinstatsindex. Warning:
# Reverting this setting requires re-downloading the entire
# blockchain. (default: 0 = disable pruning blocks, 1 = allow
# manual pruning via RPC, >=550 = automatically prune block files
# to stay under the specified target size in MiB)
#prune=10000

# Activate all block filter (default: 0) Only set this for development purposes 
# it's not needed if you just want to run a full node.
#blockfilterindex=1

# Serve filters with compact blocks to peer as per BIP 157
#peerblockfilters=1

# Maintain index coinstats used by RPC gettxoutsetinfo (default: 0). 
# Only set this for development purposes - it's not needed if you just want to run a full node
#coinstatsindex=1

# Keep the transaction memory pool below <n> megabytes. It ensures that nodes don't run out 
# of memory because of excessive stash of not-confirmed transactions, allowing them to stay 
# operative and continue to partecipate to blocks validation and propagation, which are
# essential activities for consensus
# default: 300
#maxmempool=300

# Do not keep transactions in the mempool longer than <n> hours 
# default: 336
#mempoolexpiry=<n>

# Use the chain <chain> (default: main). Allowed values: main, test,
# signet, regtest
#chain=<chain>


# ---[ Debugging & Testing ]--------------------------------------------------------------------

# It show some extra network activity in the log output. Do not leave debug set to 1 indefinitely 
# or your log file will grow larger than the entire blockchain and fill up your hard drive.
# (default: -nodebug)
#debug=net

# Specfy location of debug log file (default: debug.log). 
# Pass -nodebuglogfile to disable writing the log to a file
#debuglogfile=<file>

# Disable debug.log
#nodebuglogfile=1


# ---[ Networking ]----------------------------------------------------------------------------

# Accept connections from outside (default: 1 if no -proxy or -connect)
#listen=1

## Proxify clearnet outbound connections using Tor SOCKS5 proxy
#proxy=127.0.0.1:9050

# Maintain at most <n> connections to peers (default: 125). This limit
# does not apply to connections manually added via -addnode or the
# addnode RPC, which have a separate limit of 8.
maxconnections=10

# Tries to keep outbound traffic under the given target (in MiB per 24h), 
# default: 0 = no limit.
maxuploadtarget=144

# Maximum per-connection memory usage for the send buffer in kB, <n>*1000 bytes
# (default: 1000). This will limit the outbound traffic to set value(MB)/per day
#maxsendbuffer=<n>

# Add a node to connect to and attempt to keep the connection open (see
# the addnode RPC help for more info). This option can be specified
# multiple times to add multiple nodes; connections are limited to
# 8 at a time and are counted separately from the -maxconnections
# limit.
#addnode=<ip>

# Connect only to the specified node; -noconnect disables automatic
# connections (the rules for this peer are the same as for
# -addnode). This option can be specified multiple times to connect
# to multiple nodes.
#connect=<ip>

# Specify your own public address
#externalip=<ip>

# Enable ZeroMQ blockhash notification (for Fulcrum)
#zmqpubhashblock=tcp://127.0.0.1:8433


# ---[ Tor settings ]-----------------------------------------------------------------------

# Provids additional Tor information in the logs. This will be useful if we need to diagnose 
# an error, or simply confirm it is working. When we finally launch Bitcoin in the next 
# section, we’ll have a separate terminal open looking for those messages. If everything is 
# running well there should be no errors mentioning Tor after the initial startup.
#debug=tor      

# Restricts Bitcoin Core outbound connections (to other nodes/peers) to only be over Tor.
#onlynet=onion

# Restricts Bitcoin Core inbound connections (from other nodes/peers) to only be over Tor. 
# If you’ve never ran a node before, other peers won’t try to connect to you because they 
# don’t know you exist, but they still could. 
#bind:127.0.0.1

# Tells Bitcoin Core how to communicate via Tor. 127.0.0.1 is your local computer, and 
# 9050 is the SOCKS port that Tor software is listening on, and which can be set up 
# via the torrc file.
#proxy=127.0.0.1:9050

# Stop Bitcoin Core from trying to connect to the default DNS “seeds” during bootup. 
# Despite the inbound/outbound restrictions we set above, without these two settings the 
# node will still try to connect to the default hosts
#dnsseed=0
#dns=0


# ---[ Transaction rely ]--------------------------------------------------------------------

# Fee rate (in BTC/kB) used to defined dust, the value of an output such that it will cost 
# about 1/3 of its value in fees at this fee rate to spend it.
# default: 0.00001
#dustrelayfee=0.00001

# Maximum size of data in OP_RETURN outputs we relay and mine.
# default: 83
#datacarriersize=83

# Fee rates (in BTC/kB) smaller than this are considered zero fee for relaying, mining and 
# transaction creation. This preserves resources of nodes and miners for computing 
# economically meaninful transaction
# default: 0.00001
#minrelaytxfee=0.00001


# ---[ Wallet settings ]---------------------------------------------------------------------

# Disable integrated wallet
disablewallet=1

# Append custom comment to the user agent string
#uacomment=user node


